# name: 'Progress Tracking Service CI'

# on:
#   push:
#     branches:
#       - master
#     paths:
#       - 'backend/treatment-planning-service/**'
#   pull_request:
#     branches:
#       - master
#     paths:
#       - 'backend/treatment-planning-service/**'

# env:
#   PROJECT_ID: '${{ secrets.PROJECT_ID }}'
#   GAR_IMAGE_NAME: '${{ secrets.TPS_GAR_IMAGE_NAME }}'
#   GAR_REPO_NAME: '${{ secrets.TPS_GAR_REPO_NAME }}'
#   GAR_REGION: '${{ secrets.GAR_REGION }}'

# jobs:
#   deploy:
#     runs-on: 'ubuntu-latest'

#     permissions:
#       contents: 'read'
#       id-token: 'write'

#     steps:
#       - name: 'Checkout'
#         uses: 'actions/checkout@v4'

#       - name: 'Authenticate to GCP'
#         id: 'auth'
#         uses: 'google-github-actions/auth@v2'
#         with:
#           credentials_json: '${{ secrets.GCP_CREDS }}'

#       - name: Set up Cloud SDK
#         uses: 'google-github-actions/setup-gcloud@v2'

#       - name: 'Docker Auth To GAR'
#         run: |
#           gcloud auth configure-docker "${{env.GAR_REGION}}-docker.pkg.dev"

#       - name: 'Build and Push To GAR'
#         run: |-
#           DOCKER_TAG="${{ env.GAR_REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.GAR_REPO_NAME }}/${{ env.GAR_IMAGE_NAME }}:${{ github.sha }}"
#           docker build --tag "${DOCKER_TAG}" ./backend/treatment-planning-service
#           docker push "${DOCKER_TAG}"

name: "Treatment Planning Service CI"

on:
  push:
    branches: [master]
    paths: ['backend/treatment-planning-service/**']
  pull_request:
    branches: [master]
    paths: ['backend/treatment-planning-service/**']

permissions:
  contents: write
  id-token: write
  security-events: write

env:
  PROJECT_ID: ${{ secrets.PROJECT_ID }}
  GAR_IMAGE_NAME: ${{ secrets.TPS_GAR_IMAGE_NAME }}
  GAR_REPO_NAME: ${{ secrets.TPS_GAR_REPO_NAME }}
  GAR_REGION: ${{ secrets.GAR_REGION }}

jobs:

  sonar:
    uses: ./.github/workflows/sonarqube-analysis.yaml
    with:
      context_path: './backend/treatment-planning-service'
      sonar_sources: './backend/treatment-planning-service/app'
    secrets:
      SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
      SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
      ORG_SONAR: ${{ secrets.ORG_SONAR }}
      PROJECT_KEY_SONAR: ${{ secrets.PROJECT_KEY_SONAR }}

  build-push:
    uses: ./.github/workflows/build-and-push.yaml
    needs: sonar
    with:
      context_path: ./backend/treatment-planning-service
      image_tag: ${{ github.sha }}
    secrets:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      GAR_REGION: ${{ secrets.GAR_REGION }}
      GAR_IMAGE_NAME: ${{ secrets.TPS_GAR_IMAGE_NAME }}
      GAR_REPO_NAME: ${{ secrets.TPS_GAR_REPO_NAME }}
      GCP_CREDS: ${{ secrets.GCP_CREDS }}

  # snyk-scan:
  #   uses: ./.github/workflows/snyk-scan.yaml
  #   needs: build-push
  #   with:
  #     context_path: ./backend/treatment-planning-service
  #   secrets:
  #     SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

  trivy-scan:
    uses: ./.github/workflows/trivy-scan.yaml
    needs: build-push
    with:
      image_tag: ${{ github.sha }}
    secrets:
      PROJECT_ID: ${{ secrets.PROJECT_ID }}
      GAR_REGION: ${{ secrets.GAR_REGION }}
      GAR_IMAGE_NAME: ${{ secrets.TPS_GAR_IMAGE_NAME }}
      GAR_REPO_NAME: ${{ secrets.TPS_GAR_REPO_NAME }}
      GCP_CREDS: ${{ secrets.GCP_CREDS }}

  update-manifest:
    uses: ./.github/workflows/helm-tag.yaml
    needs: trivy-scan
    with:
      service_name: 'treatment-planning-service'
      image_tag: ${{ github.sha }}
      helm_repo: "https://github.com/AcademiaY4/CogniCare-Manifest.git"
      service_folder: "treatment-planning-service"
    secrets:
      MANIFEST_REPO: AcademiaY4/CogniCare-Manifest
      MANIFEST_BRANCH: master
      PAT_FOR_MANIFEST: ${{ secrets.PAT_FOR_MANIFEST }}
